Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Gfx = Elm.Gfx.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Mouse = Elm.Mouse.make(_elm),
   $Random = Elm.Random.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm);
   var _op = {};
   var seedToPic = function (_p0) {
      var _p1 = _p0;
      var _p2 = A2($Gfx.rings,$Random.initialSeed(_p1._0),_p1._1);
      var elem = _p2._0;
      var s0 = _p2._1;
      return $Gfx.canvas(_U.list([elem]));
   };
   var main = A2($Signal.map,
   seedToPic,
   A3($Signal.map2,F2(function (v0,v1) {    return {ctor: "_Tuple2",_0: v0,_1: v1};}),$Mouse.x,$Time.every($Time.millisecond)));
   return _elm.Main.values = {_op: _op,seedToPic: seedToPic,main: main};
};